pipeline {
    agent any

    environment {
        DOCKER_HUB_CREDENTIALS = credentials('docker-hub')  // Add in Jenkins > Credentials
        DOCKER_IMAGE = 'sanju716/myapp:latest'
        EC2_PUBLIC_IP = '3.111.41.28'  // Replace with actual EC2 public IP or use Jenkins environment variable
    }

    stages {
        stage('Clone Repo') {
            steps {
                git 'https://github.com/Sanjeevroars/CI-CD-Devops.git'
            }
        }

        stage('Build with Maven') {
            steps {
                sh 'mvn clean package'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh 'docker build -t $DOCKER_IMAGE .'
            }
        }

        stage('Push to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh '''
                        echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                        docker push $DOCKER_IMAGE
                    '''
                }
            }
        }

        stage('Deploy to AWS EC2') {
            steps {
                sshagent(['ec2-key']) {
                    sh '''
                        ssh -o StrictHostKeyChecking=no ubuntu@$EC2_PUBLIC_IP '
                        # Pull the latest Docker image
                        docker pull $DOCKER_IMAGE &&
                        # Stop and remove the previous container if it exists
                        docker stop myapp || true &&
                        docker rm myapp || true &&
                        # Run the new container
                        docker run -d -p 80:8080 --name myapp $DOCKER_IMAGE'
                    '''
                }
            }
        }
    }
}
